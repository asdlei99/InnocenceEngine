#version 450
layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

struct DispatchParam
{
    uvec4 numThreadGroups;
    uvec4 numThreads;
};

struct Probe
{
    vec4 pos;
    uint brickFactorRange[12];
    float skyVisibility[6];
    uint padding[10];
};

struct BrickFactor
{
    float basisWeight;
    uint brickIndex;
};

layout(binding = 8, std140) uniform dispatchParamsCBuffer
{
    DispatchParam dispatchParams[8];
} _30;

layout(binding = 11, std140) uniform GISkyCBuffer
{
    layout(row_major) mat4 GISky_p_inv;
    layout(row_major) mat4 GISky_v_inv[6];
    layout(row_major) mat4 GISky_viewportSize;
} _58;

layout(binding = 0, std430) buffer in_probes
{
    Probe _data[];
} in_probes_1;

layout(binding = 1, std430) buffer in_brickFactors
{
    BrickFactor _data[];
} in_brickFactors_1;

layout(binding = 2, std430) buffer in_brickIrradiance
{
    vec4 _data[];
} in_brickIrradiance_1;

layout(binding = 3, rgba32f) uniform writeonly image3D out_irradianceVolume;

void main()
{
    uint _391 = (gl_GlobalInvocationID.x + (gl_GlobalInvocationID.y * _30.dispatchParams[4].numThreads.x)) + ((gl_GlobalInvocationID.z * _30.dispatchParams[4].numThreads.x) * _30.dispatchParams[4].numThreads.y);
    if (float(_391) < _58.GISky_viewportSize[1].y)
    {
        uint _563[12];
        _563[0] = in_probes_1._data[_391].brickFactorRange[0];
        _563[1] = in_probes_1._data[_391].brickFactorRange[1];
        _563[2] = in_probes_1._data[_391].brickFactorRange[2];
        _563[3] = in_probes_1._data[_391].brickFactorRange[3];
        _563[4] = in_probes_1._data[_391].brickFactorRange[4];
        _563[5] = in_probes_1._data[_391].brickFactorRange[5];
        _563[6] = in_probes_1._data[_391].brickFactorRange[6];
        _563[7] = in_probes_1._data[_391].brickFactorRange[7];
        _563[8] = in_probes_1._data[_391].brickFactorRange[8];
        _563[9] = in_probes_1._data[_391].brickFactorRange[9];
        _563[10] = in_probes_1._data[_391].brickFactorRange[10];
        _563[11] = in_probes_1._data[_391].brickFactorRange[11];
        float _564[6];
        _564[0] = in_probes_1._data[_391].skyVisibility[0];
        _564[1] = in_probes_1._data[_391].skyVisibility[1];
        _564[2] = in_probes_1._data[_391].skyVisibility[2];
        _564[3] = in_probes_1._data[_391].skyVisibility[3];
        _564[4] = in_probes_1._data[_391].skyVisibility[4];
        _564[5] = in_probes_1._data[_391].skyVisibility[5];
        uint _600;
        _600 = 0u;
        vec3 _475;
        vec4 _369[6];
        for (; _600 < 6u; _369[_600].w = _564[_600], imageStore(out_irradianceVolume, ivec3(uvec3(_475 + vec3(0.0, 0.0, float(_600) * _58.GISky_viewportSize[0].y))), _369[_600]), _600++)
        {
            _475 = in_probes_1._data[_391].pos.xyz;
            _369[_600] = vec4(0.0);
            uint _479 = _600 * 2u;
            uint _481 = _563[_479];
            uint _484 = (_600 * 2u) + 1u;
            uint _486 = _563[_484];
            if (_481 != _486)
            {
                for (uint _601 = _481; _601 < _486; )
                {
                    _369[_600] += (in_brickIrradiance_1._data[in_brickFactors_1._data[_601].brickIndex] * in_brickFactors_1._data[_601].basisWeight);
                    _601++;
                    continue;
                }
                _369[_600] /= vec4(float(_486 - _481));
                continue;
            }
            else
            {
                _369[_600] = in_brickIrradiance_1._data[in_brickFactors_1._data[_481].brickIndex];
                continue;
            }
            continue;
        }
    }
}

