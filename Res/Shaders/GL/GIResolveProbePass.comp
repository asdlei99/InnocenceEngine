#version 450
layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

struct DispatchParam
{
    uvec4 numThreadGroups;
    uvec4 numThreads;
};

struct Probe
{
    vec4 pos;
    uint brickFactorRange[12];
    float skyVisibility[6];
    uint padding[10];
};

struct BrickFactor
{
    float basisWeight;
    uint brickIndex;
};

layout(binding = 8, std140) uniform dispatchParamsCBuffer
{
    DispatchParam dispatchParams[8];
} _30;

layout(binding = 11, std140) uniform GISkyCBuffer
{
    layout(row_major) mat4 GISky_p_inv;
    layout(row_major) mat4 GISky_v_inv[6];
    layout(row_major) mat4 GISky_viewportSize;
} _58;

layout(binding = 0, std430) buffer in_probes
{
    Probe _data[];
} in_probes_1;

layout(binding = 1, std430) buffer in_brickFactors
{
    BrickFactor _data[];
} in_brickFactors_1;

layout(binding = 2, std430) buffer in_brickIrradiance
{
    vec4 _data[];
} in_brickIrradiance_1;

layout(binding = 3, rgba32f) uniform writeonly image3D out_irradianceVolume;

void main()
{
    uint _396 = (gl_GlobalInvocationID.x + (gl_GlobalInvocationID.y * _30.dispatchParams[4].numThreads.x)) + ((gl_GlobalInvocationID.z * _30.dispatchParams[4].numThreads.x) * _30.dispatchParams[4].numThreads.y);
    if (float(_396) < _58.GISky_viewportSize[1].y)
    {
        uint _572[12];
        _572[0] = in_probes_1._data[_396].brickFactorRange[0];
        _572[1] = in_probes_1._data[_396].brickFactorRange[1];
        _572[2] = in_probes_1._data[_396].brickFactorRange[2];
        _572[3] = in_probes_1._data[_396].brickFactorRange[3];
        _572[4] = in_probes_1._data[_396].brickFactorRange[4];
        _572[5] = in_probes_1._data[_396].brickFactorRange[5];
        _572[6] = in_probes_1._data[_396].brickFactorRange[6];
        _572[7] = in_probes_1._data[_396].brickFactorRange[7];
        _572[8] = in_probes_1._data[_396].brickFactorRange[8];
        _572[9] = in_probes_1._data[_396].brickFactorRange[9];
        _572[10] = in_probes_1._data[_396].brickFactorRange[10];
        _572[11] = in_probes_1._data[_396].brickFactorRange[11];
        float _573[6];
        _573[0] = in_probes_1._data[_396].skyVisibility[0];
        _573[1] = in_probes_1._data[_396].skyVisibility[1];
        _573[2] = in_probes_1._data[_396].skyVisibility[2];
        _573[3] = in_probes_1._data[_396].skyVisibility[3];
        _573[4] = in_probes_1._data[_396].skyVisibility[4];
        _573[5] = in_probes_1._data[_396].skyVisibility[5];
        uint _609;
        _609 = 0u;
        vec3 _480;
        vec4 _374[6];
        for (; _609 < 6u; _374[_609].w = _573[_609], imageStore(out_irradianceVolume, ivec3(uvec3(_480 + vec3(0.0, 0.0, float(_609) * _58.GISky_viewportSize[0].y))), _374[_609]), _609++)
        {
            _480 = in_probes_1._data[_396].pos.xyz;
            _374[_609] = vec4(0.0);
            uint _484 = _609 * 2u;
            uint _486 = _572[_484];
            uint _489 = (_609 * 2u) + 1u;
            uint _491 = _572[_489];
            if (_486 != 4294967295u)
            {
                if (_486 != _491)
                {
                    for (uint _610 = _486; _610 < _491; )
                    {
                        _374[_609] += (in_brickIrradiance_1._data[in_brickFactors_1._data[_610].brickIndex] * in_brickFactors_1._data[_610].basisWeight);
                        _610++;
                        continue;
                    }
                    _374[_609] /= vec4(float(_491 - _486));
                }
                else
                {
                    _374[_609] = in_brickIrradiance_1._data[in_brickFactors_1._data[_486].brickIndex];
                }
                continue;
            }
            else
            {
                continue;
            }
            continue;
        }
    }
}

