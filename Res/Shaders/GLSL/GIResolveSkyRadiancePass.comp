#version 450
layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(set = 0, binding = 3, std140) uniform sunCBuffer
{
    vec4 sun_dir;
    vec4 sun_illuminance;
    layout(row_major) mat4 sun_r;
    vec4 sun_padding[2];
} _386;

layout(set = 0, binding = 0, rgba32f) uniform writeonly image3D out_skyRadiance;

vec3 _1089;
vec2 _1090;
float _1094;
int _1095;
float _1096;

void main()
{
    if (gl_GlobalInvocationID.z < 6u)
    {
        vec3 _1040;
        vec3 _1041;
        _1041 = (vec3(gl_GlobalInvocationID) + vec3(1.0)) * vec3(0.125, 0.125, 0.16666667163372039794921875);
        _1040 = -_386.sun_dir.xyz;
        vec3 _1044;
        vec3 _1053;
        vec3 _1088;
        vec3 _645;
        for (;;)
        {
            _645 = normalize(_1041);
            _1053 = normalize(_1040);
            _1044 = _645;
            vec2 _1042;
            for (;;)
            {
                float _823 = dot(_645, _645);
                float _826 = dot(_645, vec3(0.0, 6371000.0, 0.0));
                float _827 = 2.0 * _826;
                float _842 = (_827 * _827) - (_823 * (-5136797663232.0));
                if (_842 < 0.0)
                {
                    _1042 = vec2(100000.0, -100000.0);
                    break;
                }
                _1042 = vec2(((_826 * (-2.0)) - sqrt(_842)) / (2.0 * _823), ((_826 * (-2.0)) + sqrt(_842)) / (2.0 * _823));
                break;
            }
            if (_1042.x > _1042.y)
            {
                _1088 = vec3(0.0);
                break;
            }
            vec2 _1047;
            vec3 _1049;
            vec3 _1051;
            _1051 = _1053;
            _1049 = _1044;
            _1047 = _1042;
            vec2 _1045;
            for (;;)
            {
                float _881 = dot(_1044, vec3(0.0, 6371000.0, 0.0));
                float _882 = 2.0 * _881;
                float _892 = _882 * _882;
                if (_892 < 0.0)
                {
                    _1045 = vec2(100000.0, -100000.0);
                    break;
                }
                _1045 = vec2(((_881 * (-2.0)) - sqrt(_892)) / (2.0 * dot(_1044, _1044)), _1096);
                break;
            }
            float _670 = min(_1042.y, _1045.x) - _1047.x;
            float _671 = _670 * 0.0625;
            float _674 = dot(_1049, _1051);
            float _934 = 1.17489993572235107421875 - (0.550000011920928955078125 * pow(0.75800001621246337890625, 3.0));
            vec3 _1055;
            vec3 _1056;
            vec3 _1057;
            vec3 _1061;
            _1061 = _1051;
            _1057 = _1049;
            _1056 = vec3(0.0);
            _1055 = vec3(0.0);
            float _705;
            float _712;
            vec3 _780;
            float _1066;
            float _1067;
            float _1070;
            float _1071;
            vec3 _1074;
            vec3 _1077;
            float _1080;
            int _1083;
            vec3 _1086;
            vec3 _1093;
            int _1054 = 0;
            float _1058 = 0.0;
            float _1059 = 0.0;
            float _1060 = 0.0;
            for (; _1054 < 16; _780 = exp(-(vec3(2.0999999833293259143829345703125e-05 * (_1066 + _1067)) + (vec3(5.8000000535685103386640548706055e-06, 1.3500000022759195417165756225586e-05, 3.3100001019192859530448913574219e-05) * (_1070 + _1071)))), _1061 = _1086, _1060 = _1066, _1059 = _1070, _1058 = _1080 + _671, _1057 = _1093, _1056 = _1077 + (_780 * _712), _1055 = _1074 + (_780 * _705), _1054 = _1083 + 1)
            {
                vec3 _694 = vec3(0.0, 6371000.0, 0.0) + (_1057 * (_1058 + (_670 * 0.03125)));
                float _696 = length(_694);
                _705 = exp((6371000.0 - _696) * 0.00012500000593718141317367553710938) * _671;
                _712 = exp((6371000.0 - _696) * 0.00076923076994717121124267578125) * _671;
                _1093 = _1057;
                _1086 = _1061;
                _1083 = _1054;
                _1080 = _1058;
                _1077 = _1056;
                _1074 = _1055;
                _1070 = _1059 + _705;
                _1066 = _1060 + _712;
                vec2 _1062;
                for (;;)
                {
                    float _961 = dot(_1061, _1061);
                    float _964 = dot(_1061, _694);
                    float _965 = 2.0 * _964;
                    float _980 = (_965 * _965) - ((4.0 * _961) * (dot(_694, _694) - 41873842372608.0));
                    if (_980 < 0.0)
                    {
                        _1062 = vec2(100000.0, -100000.0);
                        break;
                    }
                    _1062 = vec2(_1096, ((_964 * (-2.0)) + sqrt(_980)) / (2.0 * _961));
                    break;
                }
                float _724 = _1062.y * 0.125;
                _1071 = 0.0;
                _1067 = 0.0;
                int _1063 = 0;
                float _1087 = 0.0;
                for (; _1063 < 8; )
                {
                    float _737 = _1087 + (_1062.y * 0.0625);
                    float _741 = length(_694 + (_1086 * _737));
                    _1087 += _724;
                    _1071 += (exp((6371000.0 - _741) * 0.00012500000593718141317367553710938) * _724);
                    _1067 += (exp((6371000.0 - _741) * 0.00076923076994717121124267578125) * _724);
                    _1063++;
                    continue;
                }
            }
            _1088 = (((vec3(5.8000000535685103386640548706055e-06, 1.3500000022759195417165756225586e-05, 3.3100001019192859530448913574219e-05) * (0.0596831031143665313720703125 * (1.0 + pow(_674, 2.0)))) * _1055) + (_1056 * (((1.0 - pow(_934, 2.0)) / ((12.56637096405029296875 * pow(1.0 + (_934 * _674), 2.0)) + 9.9999997473787516355514526367188e-05)) * 2.0999999833293259143829345703125e-05))) * 22.0;
            break;
        }
        imageStore(out_skyRadiance, ivec3(gl_GlobalInvocationID), vec4(_1088, 1.0));
    }
}

